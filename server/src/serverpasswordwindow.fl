# data file for the Fltk User Interface Designer (fluid)
version 1.0308
header_name {.h}
code_name {.cxx}
decl {\#include<functional>} {public global
}

class ServerPasswordWindow {} {
  decl {std::function<void(ServerPasswordWindow *)> m_callback;} {private local
  }
  Function {ServerPasswordWindow()} {} {
    Fl_Window m_window {
      label ServerPasswordWindow
      xywh {574 340 300 80} type Double modal visible
    } {
      Fl_Box m_titleBox {
        label label
        xywh {0 3 300 26}
      }
      Fl_Input m_input {
        xywh {5 40 290 25} type Secret labeltype NO_LABEL
      }
    }
    code {{
    m_input->when(FL_WHEN_ENTER_KEY | FL_WHEN_NOT_CHANGED);
    auto fnCallback = [](Fl_Widget *, void *data)
    {
        if(auto winptr = static_cast<ServerPasswordWindow *>(data)){
            winptr->triggerCallback();
        }
    };

    m_input->callback(+fnCallback, this);
}} {}
  }
  Function {setTitle(const char *s)} {return_type void
  } {
    code {m_titleBox->copy_label(s);} {}
  }
  Function {setCallback(std::function<void(ServerPasswordWindow *)> cb)} {return_type void
  } {
    code {m_callback = std::move(cb);} {}
  }
  Function {showAll()} {return_type void
  } {
    code {m_window->show();} {}
  }
  Function {hideAll()} {return_type void
  } {
    code {m_window->hide();} {}
  }
  Function {getPassword()} {return_type {const char *}
  } {
    code {return m_input->value();} {}
  }
  Function {triggerCallback()} {return_type void
  } {
    code {if(m_callback){ m_callback(this); }} {}
  }
}
